{"version":3,"sources":["API/api.js","serviceWorker.js","components/navbar/Navbar.js","components/header/Header.js","components/header/HeaderContainer.js","redux/authApp-reducer.js","redux/SidebarReducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/commons/Preloader/Preloader.js","components/header/Header.module.css","redux/ProfileReducer.js","redux/dialogs-reducer.js","components/navbar/Navbar.module.css","utils/object-helpers.js","redux/UsersReducer.js","components/commons/Preloader/preloader.module.css"],"names":["instance","axios","baseURL","withCredentials","headers","userApi","getUsers","count","currentPage","get","then","response","data","followUser","userId","post","resultCode","unfollowUser","delete","profileApi","getUserProfile","getUserStatus","updateStatusUserProfile","status","put","authApi","authUser","loginUser","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","props","className","s","nav","item","to","activeClassName","active","posts","dialogs","messages","Header","isAuth","login","header","src","alt","loginBlock","onClick","HeaderContainer","console","log","this","Component","compose","connect","state","auth","initialState","initialized","initializedAppReducer","action","type","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebarPage","usersPage","usersReducer","authReducer","form","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleWare","DialogsContainer","React","lazy","UsersContainer","ProfileContainer","LoginContainer","Music","News","Settings","App","initializeApp","Suspense","fallback","Preloader","path","render","component","ContainerApp","withRouter","dispatch","getAuthUser","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","id","isFetching","setAuthUserData","payload","a","length","stopSubmit","_error","styles","ldsEllipsis","module","exports","addPost","newPostText","setUserStatus","profile","updateUserStatus","text","Date","now","toString","filter","postId","addMessage","newMessageBody","updateObjectInArray","items","itemId","objectPropName","newObjectProps","map","followSuccess","unfollowSuccess","setIsFetching","setFollowingProgress","requestUsers","setCurrentPage","users","totalUsersCount","totalCount","followUnfollow","useApi","actionCreator","follow","unfollow","followed","isFollowingProgress"],"mappings":"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","file":"static/js/main.0453e37c.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '0d8806c4-7afd-46f2-95f2-b162d060331a'\r\n    }\r\n})\r\n\r\nexport const userApi = {\r\n    getUsers(count, currentPage) {\r\n        return instance.get(`users?count=${count}&page=${currentPage}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data.resultCode)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatusUserProfile(status) {\r\n        return instance.put(`profile/status`, {\r\n            status\r\n        })\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    authUser() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    loginUser(email, password, rememberMe = false) {\r\n        return instance.post(`/auth/login`,{\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n}\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active} posts={props.posts}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active} dialogs={props.dialogs} messages={props.messages}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = ({isAuth, login, logout}) => {\r\n    const handleClick = () => {\r\n        logout()\r\n    }\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ9Dw13lAK4nF-A2hZtMRHz4Pj2jm4id9hpQw&usqp=CAU\" alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth ? <div>{login} - <button onClick={handleClick}>Log Out</button></div> : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends Component {\r\n    render() {\r\n        console.log('render Header')\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout})\r\n)(HeaderContainer);\r\n","import {getAuthUser} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst initializedAppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(getAuthUser())\r\n        .then(() => dispatch(initializedSuccess()));\r\n};\r\n\r\nexport default initializedAppReducer;","const sidebarReducer = (state = {}, action) => {\r\n\r\n    return state\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./ProfileReducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./SidebarReducer\";\r\nimport usersReducer from \"./UsersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport initializedAppReducer from \"./authApp-reducer\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: initializedAppReducer\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleWare)));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport {Switch, withRouter, Route, BrowserRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/authApp-reducer\";\nimport Preloader from \"./components/commons/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/dialogs/DialogsContainer\"))\nconst UsersContainer = React.lazy(() => import(\"./components/users/UsersContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/profile/ProfileContainer\"))\nconst LoginContainer = React.lazy(() => import(\"./components/login/LoginContainer\"))\nconst Music = React.lazy(() => import( \"./components/music/Music\"));\nconst News = React.lazy(() => import( \"./components/news/News\"));\nconst Settings = React.lazy(() => import(\"./components/settings/Settings\"))\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <React.Suspense fallback={<Preloader />}>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/news' component={News}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/login' render={() => <LoginContainer/>}/>\n                        </React.Suspense>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst ContainerApp = compose(withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <ContainerApp/>\n            </Provider>\n        </BrowserRouter>)\n}\n\nexport default SamuraiJSApp;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(\n    <SamuraiJSApp />, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import {authApi} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: true,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//ActionCreators\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n//ThunkCreators\r\nexport const getAuthUser = () => async (dispatch) => {\r\n    const data = await authApi.authUser()\r\n\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const loginUser = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authApi.loginUser(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUser())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages : 'some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const data = await authApi.logout()\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport styles from \"./preloader.module.css\";\r\n\r\nconst Preloader = (props) => (\r\n    <div className={styles.ldsEllipsis}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3UKvZ\",\"loginBlock\":\"Header_loginBlock__raAQA\"};","import {profileApi} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst POST_DELETE = 'POST_DELETE';\r\n\r\nlet initialState = {\r\n    \"posts\": [\r\n        {\r\n            \"message\": 'Hi, how are you?',\r\n            \"likesCounter\": 15,\r\n            \"id\": '1'\r\n        },\r\n        {\r\n            \"message\": 'It is my first post!',\r\n            \"likesCounter\": 25,\r\n            \"id\": '2'\r\n        }\r\n    ],\r\n    \"profile\": null,\r\n    \"status\": 'Enter your status here'\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            if (!action.newPostText.text) return state;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    \"message\": action.newPostText.text,\r\n                    \"likesCounter\": 0,\r\n                    \"id\": Date.now().toString()\r\n                }],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case POST_DELETE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// ActionsCreators\r\nexport const addPost = (newPostText) => ({\r\n    type: ADD_POST, newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const deletePost = (postId) => ({type: POST_DELETE, postId})\r\n\r\n// ThunksCreators\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileApi.getUserProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n\r\n};\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileApi.getUserStatus(userId)\r\n\r\n    if (!data) return\r\n    dispatch(setUserStatus(data))\r\n\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileApi.updateStatusUserProfile(status)\r\n\r\n    if (response.data.resultCode === 0) dispatch(setUserStatus(status));\r\n\r\n};\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    \"dialogs\": [\r\n        {\"name\": 'Ivan', \"id\": '1'},\r\n        {\"name\": 'Lera', \"id\": '2'},\r\n        {\"name\": 'Ksucha', \"id\": '3'},\r\n        {\"name\": 'Lena', \"id\": '4'},\r\n        {\"name\": 'Andrey', \"id\": '5'},\r\n        {\"name\": 'Misha', \"id\": '6'},\r\n        {\"name\": 'Sasha', \"id\": '7'},\r\n    ],\r\n    \"messages\": [\r\n        {\"message\": 'Hi', \"id\": '1'},\r\n        {\"message\": 'How are you', \"id\": '2'},\r\n        {\"message\": 'Yo', \"id\": '3'}\r\n\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  'ADD_MESSAGE':\r\n            if (!action.newMessageBody.text) return state;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    \"message\": action.newMessageBody.text,\r\n                    \"id\": Date.now().toString()\r\n                }],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (newMessageBody) => ({\r\n    type: ADD_MESSAGE, newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__hYzXP\",\"item\":\"Navbar_item__3Saia\",\"active\":\"Navbar_active__16zjC\"};","export const updateObjectInArray = (items, itemId, objectPropName, newObjectProps) => {\r\n    return items.map(item => {\r\n        if (item[objectPropName] === itemId) {\r\n            return {...item, ...newObjectProps}\r\n        }\r\n        return item;\r\n    })\r\n}","import {userApi} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\r\nconst TOTAL_USERS_COUNT = 'TOTAL_USERS_COUNT';\r\nconst IS_FOLLOWING_PROGRESS = 'IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    \"users\": [],\r\n    \"pageSize\": 10,\r\n    \"totalUsersCount\": 20,\r\n    \"currentPage\": 1,\r\n    \"isFetching\": true,\r\n    \"isFollowingProgress\": []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.isFetching\r\n                    ? [...state.isFollowingProgress, action.userId]\r\n                    : state.isFollowingProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setIsFetching = (isFetching) => ({type: SET_IS_FETCHING, isFetching});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setFollowingProgress = (isFetching, userId) => ({type: IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (count, currentPage) => (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage))\r\n    userApi.getUsers(count, currentPage)\r\n        .then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n}\r\n\r\nconst followUnfollow = async (userId, dispatch, useApi, actionCreator) => {\r\n    dispatch(setFollowingProgress(true, userId));\r\n    const resultCode = await useApi\r\n    if (resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(setFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollow(userId, dispatch, userApi.followUser(userId), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollow(userId, dispatch, userApi.unfollowUser(userId), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"preloader_ldsEllipsis__3_AO6\",\"ldsEllipsis1\":\"preloader_ldsEllipsis1__3rVfi\",\"ldsEllipsis2\":\"preloader_ldsEllipsis2__1hhCg\",\"ldsEllipsis3\":\"preloader_ldsEllipsis3__16e9B\"};"],"sourceRoot":""}