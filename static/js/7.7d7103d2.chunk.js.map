{"version":3,"sources":["components/commons/FormsControl/FormsControl.module.css","utils/validators.js","components/commons/FormsControl/FormsControl.js","utils/form-helpers.js","components/login/Login.js","components/login/LoginContainer.js"],"names":["module","exports","required","value","maxLength","length","FormControl","input","meta","props","hasError","error","touched","className","style","formControl","children","Textarea","Input","createField","component","name","placeholder","validators","text","Field","validate","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","formSummaryError","Login","isAuth","loginUser","to","email","password","rememberMe","LoginContainer","this","Component","compose","connect","state","auth"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,sIAGEC,EAAY,SAACA,GAAD,OAAe,SAACD,GACrC,GAAIA,GAASA,EAAME,OAASD,EAAW,MAAM,4JAAN,OAAsCA,EAAtC,uCAA0DD,EAAME,W,oJCHrGC,EAAc,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAASC,EAAW,gCACvCC,EAAWF,EAAKG,OAASH,EAAKI,QACpC,OACI,yBAAKC,WAAYH,EAAWI,IAAMH,MAAQ,IAAM,IAAMG,IAAMC,aAC5D,6BACKN,EAAMO,UAEdN,EAAW,+BAAQF,EAAKG,OAAiB,KAKjCM,EAAW,SAACR,GACrB,OACI,kBAACH,EAAgBG,EAAO,8CAAcA,EAAWA,EAAMF,UAIlDW,EAAQ,SAACT,GAClB,OACI,kBAACH,EAAgBG,EAAO,2CAAWA,EAAWA,EAAMF,W,yJCpB/CY,EAAc,SAACC,EAAWC,EAAMC,GAAyD,IAA5CC,EAA2C,uDAA9B,GAAId,EAA0B,uDAAlB,GAAIe,EAAc,uDAAP,GAC1F,OACI,6BACI,kBAACC,EAAA,EAAD,eAAOL,UAAWA,EAAWC,KAAMA,EAAMC,YAAaA,EAAaI,SAAUH,GAAgBd,IAASe,ICkB5GG,EAAiBC,YAAW,CAC9BC,KAAM,SADaD,EAhBL,SAACnB,GACf,OACI,0BAAMqB,SAAUrB,EAAMsB,cACjBZ,EAAYD,IAAO,QAAS,QAAShB,KACrCiB,EAAYD,IAAO,WAAY,WAAYhB,IAAU,CAAC8B,KAAM,aAC5Db,EAAYD,IAAO,aAAc,WAAW,GAAI,CAACc,KAAM,YAAa,eACpEvB,EAAME,OAAS,yBAAKE,UAAWC,IAAMmB,kBACjCxB,EAAME,OAEX,6BACI,8CA0BDuB,EAhBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAMpB,OAAID,EACO,kBAAC,IAAD,CAAUE,GAAI,aAGlB,6BACH,qCACA,kBAACV,EAAD,CAAgBG,SAVH,SAAC,GAAmC,IAAlCQ,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAChCJ,EAAUE,EAAOC,EAAUC,Q,wBCzB7BC,E,uKAEE,OAAO,kBAAC,EAAUC,KAAKjC,W,GAFFkC,aAUdC,4BACXC,aALoB,SAACC,GAAD,MAAY,CAChCX,OAAQW,EAAMC,KAAKZ,UAIM,CAACC,gBADfQ,CAEbH","file":"static/js/7.7d7103d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__27tVq\",\"error\":\"FormsControl_error__2ZqwM\",\"formSummaryError\":\"FormsControl_formSummaryError__22qt6\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Поле не может быть пустым';\r\n}\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальное число символов ${maxLength}, у вас ${value.length}`;\r\n    return  undefined;\r\n}","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\"\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return (\r\n        <div className={(hasError ? style.error : '') + ' ' + style.formControl}>\r\n        <div >\r\n            {props.children}\r\n        </div>\r\n    {hasError ? <small>{meta.error}</small> : ''}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (\r\n        <FormControl {...props}><textarea {...props} {...props.input} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <FormControl {...props}><input {...props} {...props.input} /></FormControl>\r\n    )\r\n}\r\n\r\n","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const createField = (component, name, placeholder, validators = {}, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field component={component} name={name} placeholder={placeholder} validate={validators} {...props}/>{text}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input} from \"../commons/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../commons/FormsControl/FormsControl.module.css\"\r\nimport {createField} from \"../../utils/form-helpers\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(Input, 'email', 'Login', required)}\r\n            {createField(Input, 'password', 'Password', required, {type: 'password'})}\r\n            {createField(Input, 'rememberMe', 'Password','', {type: 'checkbox'}, 'Remember me')}\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = ({isAuth, loginUser}) => {\r\n\r\n    const onSubmit = ({email, password, rememberMe}) => {\r\n        loginUser(email, password, rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div> \r\n}\r\n\r\nexport default Login;","import React, {Component} from \"react\";\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/auth-reducer\";\r\n\r\nclass LoginContainer extends Component {\r\n    render() {\r\n        return <Login {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {loginUser})\r\n)(LoginContainer)"],"sourceRoot":""}